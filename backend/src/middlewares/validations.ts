import { Joi, celebrate } from 'celebrate';
import { Types } from 'mongoose';

// üõ°Ô∏è –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
export const phoneRegExp = /^[\d\s()+-]{6,30}$/;

// –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π
export enum PaymentType {
  Card = 'card',
  Online = 'online',
}

// –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
const createErrorMessages = (field: string) => ({
  'string.empty': `${field} –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ`,
});

// –û–±—â–∏–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä ObjectId
const objectIdValidator = Joi.string().custom((value, helpers) => {
  if (Types.ObjectId.isValid(value)) return value;
  return helpers.message({ custom: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π id' });
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è ID –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
export const validateObjId = celebrate({
  params: Joi.object().keys({
    productId: objectIdValidator.required(),
  }),
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–∞ –∑–∞–∫–∞–∑–∞
export const validateOrderBody = celebrate({
  body: Joi.object().keys({
    items: Joi.array()
      .items(objectIdValidator)
      .min(1)
      .required()
      .messages({
        'array.base': '–ü–æ–ª–µ items –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º',
        'array.empty': '–ù–µ —É–∫–∞–∑–∞–Ω—ã —Ç–æ–≤–∞—Ä—ã',
        'array.min': '–ú–∏–Ω–∏–º—É–º 1 —Ç–æ–≤–∞—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–±—Ä–∞–Ω',
      }),

    payment: Joi.string()
      .valid(...Object.values(PaymentType))
      .required()
      .messages({
        'any.only': '–¢–∏–ø –æ–ø–ª–∞—Ç—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å "card" –∏–ª–∏ "online"',
        ...createErrorMessages('–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã'),
      }),

    email: Joi.string()
      .email()
      .required()
      .max(100)
      .messages({
        ...createErrorMessages('Email'),
        'string.email': 'Email –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º',
      }),

    phone: Joi.string()
      .required()
      .pattern(phoneRegExp)
      .max(30)
      .messages({
        ...createErrorMessages('–¢–µ–ª–µ—Ñ–æ–Ω'),
        'string.pattern.base': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
      }),

    address: Joi.string()
      .required()
      .min(5)
      .max(200)
      .messages({
        ...createErrorMessages('–ê–¥—Ä–µ—Å'),
        'string.min': '–ê–¥—Ä–µ—Å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π (–º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤)',
      }),

    total: Joi.number()
      .required()
      .positive()
      .messages({
        'number.base': '–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º',
        'number.positive': '–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π',
      }),

    comment: Joi.string().allow('').max(1000),
  }),
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
export const validateProductBody = celebrate({
  body: Joi.object().keys({
    title: Joi.string()
      .required()
      .min(2)
      .max(100)
      .messages(createErrorMessages('–ü–æ–ª–µ "title"')),

    image: Joi.object().keys({
      fileName: Joi.string().required(),
      originalName: Joi.string().required().max(100),
    }),

    category: Joi.string().required().messages(createErrorMessages('–ü–æ–ª–µ "category"')),

    description: Joi.string()
      .required()
      .min(5)
      .max(1000)
      .messages(createErrorMessages('–ü–æ–ª–µ "description"')),

    price: Joi.number().allow(null),
  }),
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
export const validateProductUpdateBody = celebrate({
  body: Joi.object().keys({
    title: Joi.string().min(2).max(100),
    image: Joi.object().keys({
      fileName: Joi.string().required(),
      originalName: Joi.string().required().max(100),
    }),
    category: Joi.string(),
    description: Joi.string().min(5).max(1000),
    price: Joi.number().allow(null),
  }),
});

// –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export const validateUserBody = celebrate({
    body: Joi.object().keys({
      name: Joi.string()
        .min(2)
        .max(30)
        .messages(createErrorMessages('–ò–º—è')),
  
      password: Joi.string()
        .min(6)
        .required()
        .messages(createErrorMessages('–ü–∞—Ä–æ–ª—å')),
  
      email: Joi.string()
        .required()
        .email()
        .max(100)
        .messages({
          ...createErrorMessages('Email'),
          'string.email': 'Email –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º',
        }),
    }),
  });
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–∞
  export const validateAuthentication = celebrate({
    body: Joi.object().keys({
      email: Joi.string()
        .required()
        .email()
        .max(100)
        .messages({
          ...createErrorMessages('Email'),
          'string.email': 'Email –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞–ª–∏–¥–Ω—ã–º',
        }),
  
      password: Joi.string()
        .required()
        .messages(createErrorMessages('–ü–∞—Ä–æ–ª—å')),
    }),
  });

